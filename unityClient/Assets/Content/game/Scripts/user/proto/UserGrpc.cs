// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: User.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Com.Skw.UserBean {
  /// <summary>
  ///传入一个用户list。向这个list里的用户发送实时语音到服务器。
  /// </summary>
  public static partial class UserController
  {
    static readonly string __ServiceName = "com.skw.userBean.UserController";

    static readonly grpc::Marshaller<global::Com.Skw.UserBean.UserRegisterBean> __Marshaller_com_skw_userBean_UserRegisterBean = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Com.Skw.UserBean.UserRegisterBean.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Com.Skw.UserBean.RegisterResult> __Marshaller_com_skw_userBean_RegisterResult = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Com.Skw.UserBean.RegisterResult.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Com.Skw.UserBean.UserLoginBean> __Marshaller_com_skw_userBean_UserLoginBean = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Com.Skw.UserBean.UserLoginBean.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Com.Skw.UserBean.LoginResult> __Marshaller_com_skw_userBean_LoginResult = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Com.Skw.UserBean.LoginResult.Parser.ParseFrom);

    static readonly grpc::Method<global::Com.Skw.UserBean.UserRegisterBean, global::Com.Skw.UserBean.RegisterResult> __Method_register = new grpc::Method<global::Com.Skw.UserBean.UserRegisterBean, global::Com.Skw.UserBean.RegisterResult>(
        grpc::MethodType.Unary,
        __ServiceName,
        "register",
        __Marshaller_com_skw_userBean_UserRegisterBean,
        __Marshaller_com_skw_userBean_RegisterResult);

    static readonly grpc::Method<global::Com.Skw.UserBean.UserLoginBean, global::Com.Skw.UserBean.LoginResult> __Method_login = new grpc::Method<global::Com.Skw.UserBean.UserLoginBean, global::Com.Skw.UserBean.LoginResult>(
        grpc::MethodType.Unary,
        __ServiceName,
        "login",
        __Marshaller_com_skw_userBean_UserLoginBean,
        __Marshaller_com_skw_userBean_LoginResult);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Com.Skw.UserBean.UserReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of UserController</summary>
    public abstract partial class UserControllerBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Com.Skw.UserBean.RegisterResult> register(global::Com.Skw.UserBean.UserRegisterBean request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Com.Skw.UserBean.LoginResult> login(global::Com.Skw.UserBean.UserLoginBean request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for UserController</summary>
    public partial class UserControllerClient : grpc::ClientBase<UserControllerClient>
    {
      /// <summary>Creates a new client for UserController</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public UserControllerClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for UserController that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public UserControllerClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected UserControllerClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected UserControllerClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Com.Skw.UserBean.RegisterResult register(global::Com.Skw.UserBean.UserRegisterBean request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return register(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Com.Skw.UserBean.RegisterResult register(global::Com.Skw.UserBean.UserRegisterBean request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_register, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Com.Skw.UserBean.RegisterResult> registerAsync(global::Com.Skw.UserBean.UserRegisterBean request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return registerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Com.Skw.UserBean.RegisterResult> registerAsync(global::Com.Skw.UserBean.UserRegisterBean request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_register, null, options, request);
      }
      public virtual global::Com.Skw.UserBean.LoginResult login(global::Com.Skw.UserBean.UserLoginBean request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return login(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Com.Skw.UserBean.LoginResult login(global::Com.Skw.UserBean.UserLoginBean request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_login, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Com.Skw.UserBean.LoginResult> loginAsync(global::Com.Skw.UserBean.UserLoginBean request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return loginAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Com.Skw.UserBean.LoginResult> loginAsync(global::Com.Skw.UserBean.UserLoginBean request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_login, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override UserControllerClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new UserControllerClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(UserControllerBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_register, serviceImpl.register)
          .AddMethod(__Method_login, serviceImpl.login).Build();
    }

  }
}
#endregion
